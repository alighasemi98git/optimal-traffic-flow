sets
I nodos /0*13/;
alias (i,j,o,d);

table
   arcs(i,j) si existe arcos entre nodos
       0   1   2   3   4   5   6   7   8   9  10  11  12  13
   0   0   0   0   0   0   1   1   1   0   0   0   0   0   0
   1   0   0   1   0   1   0   0   0   0   0   0   0   0   0
   2   0   1   0   1   0   0   0   0   0   0   0   0   0   0
   3   0   0   1   0   1   0   0   0   0   0   0   0   0   0
   4   0   1   0   1   0   1   0   0   0   0   0   0   0   0
   5   1   0   0   0   1   0   0   0   1   0   0   0   0   0
   6   1   0   0   0   0   0   0   0   0   0   0   0   0   0
   7   1   0   0   0   0   0   0   0   1   0   0   1   0   1
   8   0   0   0   0   0   1   0   1   0   1   1   1   0   0
   9   0   0   0   0   0   0   0   0   1   0   0   0   0   0
  10   0   0   0   0   0   0   0   0   1   0   0   1   0   0
  11   0   0   0   0   0   0   0   1   1   0   1   0   1   1
  12   0   0   0   0   0   0   0   0   0   0   0   1   0   1
  13   0   0   0   0   0   0   0   1   0   0   0   1   1   0
;

table
    people(i,j)  Number of people moving from node i to node j 0 1 2 4 7 receive more people
     0      1      2      3      4      5      6      7      8      9      10     11     12     13
 0   0      0      0      0      0      0      0      0      0      0      0      0      0      0
 1   52000  0      2000   1000   2000   900    500    1000   700    1000   700    1111   500    300
 2   53000  2000   0      500    2000   800    600    1000   600    1000   700    1111   300    300
 3   55000  3000   2000   0      2000   600    500    2000   600    1000   600    1111   400    400
 4   56000  2000   2000   900    0      1000   800    2000   700    1000   600    1111   500    300
 5   54000  2000   2000   600    2000   0      500    2000   600    1000   800    1111   400    300
 6   47000  2000   2000   800    2000   900    0      2000   500    1000   600    1111   300    300
 7   60000  3000   2000   1000   3000   700    500    0      600    2000   800    1111   400    300
 8   53000  2000   2000   700    2000   800    600    2000   0      1000   800    1111   400    400
 9   18000  2000   1000   400    2000   600    400    1000   500    0      600    1111   200    200
10   14000  1000   1000   300    1000   400    300    1000   300    1000   0      1111   300    200
11   54000  2000   2000   900    2000   700    600    2000   800    1000   700    0      500    300
12   14000  1000   1000   400    1000   500    300    1000   300    1000   400    1111   0      200
13   18000  1000   1000   500    1000   600    400    1000   500    1000   600    1111   300    0
;

table
    time(i,j)  travel time
         0      1      2      3      4      5      6      7      8      9     10     11     12     13
    0    0      0      0      0      0      13     13     10     0      0     0      0      0      0
    1    0      0      14     0      30     0      0      0      0      0     0      0      0      0
    2    0      14     0      21     0      0      0      0      0      0     0      0      0      0
    3    0      0      21     0      15     0      0      0      0      0     0      0      0      0
    4    0      30     0      15     0      21     0      0      0      0     0      0      0      0
    5    13     0      0      0      21     0      0      0      22     0     0      0      0      0
    6    13     0      0      0      0      0      0      0      0      0     0      0      0      0
    7    10     0      0      0      0      0      0      0      6      0     0      20     0      16
    8    0      0      0      0      0      22     0      6      0      20    13     13     0      0
    9    0      0      0      0      0      0      0      0      20     0     0      0      0      0
   10    0      0      0      0      0      0      0      0      13     0     0      27     0      0
   11    0      0      0      0      0      0      0      20     13     0     27     0      19     12
   12    0      0      0      0      0      0      0      0      0      0     0      19     0      21
   13    0      0      0      0      0      0      0      16     0      0     0      12     21     0
;

positive variable
x(o,d,i,j) number of people from o movig to d in arc ij;

Variable
obj minimize travel time;

Equations
objective
arcs_existance(o,d,i,j)
arcs_existance2(o,d,i,j)
flow1(o,d,i)
flow2(o,d,i)
flow3(o,d,i)
loops(o,d,i)
;

objective..obj=E=sum((o,d,i,j),time(i,j)*x(o,d,i,j));

arcs_existance(o,d,i,j)..x(o,d,i,j)=L=arcs(i,j)*people(o,d);
arcs_existance2(o,d,i,j)..x(o,d,i,j)$(not arcs(i,j)) =e= 0;

flow1(o,d,i)$(ord(i)=ord(o))..sum(j,x(o,d,i,j))-sum(j,x(o,d,j,i))=E=people(o,d);
flow2(o,d,i)$(ord(i)=ord(d))..sum(j,x(o,d,i,j))-sum(j,x(o,d,j,i))=E=-people(o,d);
flow3(o,d,i)$((ord(i)<>ord(o))and(ord(i)<>ord(d)))..sum(j,x(o,d,i,j))-sum(j,x(o,d,j,i))=E=0;
loops(o,d,i)..x(o,d,i,i)=E=0;

options optcr=0;
model transport /all/;

solve transport using MIP minimizing obj;






